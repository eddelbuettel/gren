// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <math.h>

using namespace Rcpp;
using namespace arma;


// est_param
List est_param(mat xr, mat xu, vec kappa, vec m, int n, int p, vec ciold, double phi, vec chiold, double lambda2, vec lambdag, vec lambdagold, bool intercept, bool unpen, bool posterior, bool elbo, bool start);
RcppExport SEXP _gren_est_param(SEXP xrSEXP, SEXP xuSEXP, SEXP kappaSEXP, SEXP mSEXP, SEXP nSEXP, SEXP pSEXP, SEXP cioldSEXP, SEXP phiSEXP, SEXP chioldSEXP, SEXP lambda2SEXP, SEXP lambdagSEXP, SEXP lambdagoldSEXP, SEXP interceptSEXP, SEXP unpenSEXP, SEXP posteriorSEXP, SEXP elboSEXP, SEXP startSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mat >::type xr(xrSEXP);
    Rcpp::traits::input_parameter< mat >::type xu(xuSEXP);
    Rcpp::traits::input_parameter< vec >::type kappa(kappaSEXP);
    Rcpp::traits::input_parameter< vec >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< vec >::type ciold(cioldSEXP);
    Rcpp::traits::input_parameter< double >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< vec >::type chiold(chioldSEXP);
    Rcpp::traits::input_parameter< double >::type lambda2(lambda2SEXP);
    Rcpp::traits::input_parameter< vec >::type lambdag(lambdagSEXP);
    Rcpp::traits::input_parameter< vec >::type lambdagold(lambdagoldSEXP);
    Rcpp::traits::input_parameter< bool >::type intercept(interceptSEXP);
    Rcpp::traits::input_parameter< bool >::type unpen(unpenSEXP);
    Rcpp::traits::input_parameter< bool >::type posterior(posteriorSEXP);
    Rcpp::traits::input_parameter< bool >::type elbo(elboSEXP);
    Rcpp::traits::input_parameter< bool >::type start(startSEXP);
    rcpp_result_gen = Rcpp::wrap(est_param(xr, xu, kappa, m, n, p, ciold, phi, chiold, lambda2, lambdag, lambdagold, intercept, unpen, posterior, elbo, start));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gren_est_param", (DL_FUNC) &_gren_est_param, 17},
    {NULL, NULL, 0}
};

RcppExport void R_init_gren(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
